# -*- coding: utf-8 -*-
"""EDA on Rollercoaster.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AIMOV5IJ3T9SE3WaYcFZmG4mE1JfqVOX

Imports and Reading Data
"""

import pandas as pd
import numpy as np
import matplotlib.pylab as plt
import seaborn as sns
plt.style.use('ggplot')
#pd.set_option('max_columns',200)

df = pd.read_csv('coaster_db.csv')

"""Data Understanding"""

#Dataframee shape
df.shape

#head
df.head()

#tail
df.tail()

df.columns

#dtypes
df.dtypes

#describe
df.describe()

"""Data Preparation"""

#Dropping irrelevant columns and rows
#Subsetting of list of columns
df= df[['coaster_name',
    #'Length', 'Speed',
    'Location', 'Status',
    #'Opening date', 'Type',
    'Manufacturer',
    #'Height restriction', 'Model', 'Height', 'Inversions',
    #'Lift/launch system', 'Cost', 'Trains', 'Park section',
    #'Duration', 'Capacity', 'G-force', 'Designer', 'Max vertical angle',
    #'Drop', 'Soft opening date', 'Fast Lane available', 'Replaced',
    #'Track layout', 'Fastrack available', 'Soft opening date.1',
    #'Closing date',  'Opened', 'Replaced by', 'Website',
    #'Flash Pass Available', 'Must transfer from wheelchair', 'Theme',
    #'Single rider line available', 'Restraint Style',
    #'Flash Pass available', 'Acceleration', 'Restraints', 'Name',
    'year_introduced', 'latitude', 'longitude', 'Type_Main','opening_date_clean',
    # 'speed1', 'speed2', 'speed1_value', 'speed1_unit',
    'speed_mph',
    #'height_value', 'height_unit',
    'height_ft','Inversions_clean', 'Gforce_clean']].copy()

#Example of dropping columns
#df.drop(['Opening date'],axis=1)

df['opening_date_clean'] = pd.to_datetime(df['opening_date_clean']) #ensure dtypes are correct and we can rewrite them

#Renaming columns
df = df.rename(columns={'coaster_name':'Coaster_Name',
          'year_introduced':'Year_Introduced',
          'opening_date_clean':'Opening_Date',
          'speed_mph':'Speed_mph',
           'height_ft': 'Height_ft',
          'Inversions_clean': 'Inversions',
          'Gforce_clean': 'Gforce'})

#Identify missing values
df.isna().sum()

#Identifying duplicated columns
df.loc[df.duplicated()]

#Check for duplicate coaster name
df.loc[df.duplicated(subset=['Coaster_Name'])].head() #loc means  Access a group of rows and columns by label (s) or a boolean array.

#Checking an example duplicate
df.query('Coaster_Name == "Crystal Beach Cyclone"')

#Feature creation
df = df.loc[~df.duplicated(subset=['Coaster_Name', 'Location', 'Opening_Date'])] \
   .reset_index(drop=True).copy()

"""Feature Understanding (Univariate analysis)"""

df['Year_Introduced'].value_counts()

ax = df['Year_Introduced'].value_counts().head(10).plot(kind='bar', title='Top 10 Years Coasters Introduced')
ax.set_xlabel('Year')
ax.set_ylabel('Count')

#Histogram
ax = df['Speed_mph'].plot(kind='hist', bins=20, title='Coaster Speed (mph)')
ax.set_xlabel('Speed (mph)')

#KDE
ax = df['Speed_mph'].plot(kind='kde',title='Coaster Speed (mph)')
ax.set_xlabel('Speed (mph)')

"""Feature Relationships"""

#Scatterplot (with seaborn)
ax = sns.scatterplot(x='Speed_mph', y='Height_ft', hue='Year_Introduced', data=df)
ax.set_title('Coaster Speed vs. Height')

#Scatterplot (with matplotlib)
df.plot(kind='scatter', x='Speed_mph', y='Height_ft', title='Coaster Speed vs. Height')

#Pairplot
sns.pairplot(df, vars=['Year_Introduced', 'Speed_mph', 'Height_ft', 'Inversions', 'Gforce'], hue='Type_Main')
plt.show()

df_corr = df[['Year_Introduced', 'Speed_mph', 'Height_ft', 'Inversions', 'Gforce']].dropna().corr()

#Heatmap
sns.heatmap(df_corr, annot=True)

"""What are the locations with the fastest roller coasters(minimum of 10 )"""

df['Location'].value_counts()

ax= df.query('Location != "Other"')\
      .groupby('Location')['Speed_mph']\
      .agg(['mean', 'count'])\
      .query('count >= 10')\
      .sort_values('mean')['mean']\
      .plot(kind='barh', figsize=(12,5), title='Average Coaster Speed by Location')
ax.set_xlabel('Average Coaster Speed')
plt.show()